!function(){"use strict";function isPercent(num){return num&&angular.isString(num)&&num.indexOf("%")>-1?!0:!1}function parseFieldValue(obj,fieldName,value){void 0===value||sizePattern.test(value)||console.error("ui-layout: invalid size: "+value),isPercent(value)?(fieldName+="Percents",value=value.substr(0,value.indexOf("%"))):fieldName+="Pixels",value=parseFloat(value),isNaN(value)||(obj[fieldName]=Math.floor(value))}function convertToPixels(percents,sz){return sz*percents/100}var sizePattern=/\d+\s*(px|%)\s*$/i;angular.module("ui.layout",[]).controller("uiLayoutCtrl",["$scope","$attrs","$element","$compile","$parse","LayoutContainer",function($scope,$attrs,$element,$compile,$parse){function _loadLayout(){if($attrs.uiLayoutStorage){var storage_fn=$parse($attrs.uiLayoutStorage),state=storage_fn($scope).get();if(void 0!==state)if(state.containers.length!==ctrl.containers.length)console.error("Saved ui-layout state is mismatched");else for(var i=0,_max_i=ctrl.containers.length;_max_i>i;i++)ctrl.containers[i].setState(state.containers[i])}}function _storeLayout(){if($attrs.uiLayoutStorage){for(var storage_fn=$parse($attrs.uiLayoutStorage),state={containers:[]},i=0,_max_i=ctrl.containers.length;_max_i>i;i++)state.containers[i]=ctrl.containers[i].getState();storage_fn($scope).set(state)}}function calculateLayout(){function inPixels(pixels,percents){var v;return void 0!==pixels?v=pixels:void 0!==percents&&(v=convertToPixels(percents,availableSize)),v}var i,_max_i,c,s,sz,minSize,maxSize,dividerSize=opts.dividerSize,elementSize=$element[0].getBoundingClientRect()[ctrl.sizeProperties.sizeProperty],availableSize=elementSize-dividerSize*ctrl.splitbars.length,autoSize=availableSize,autoContainers=0;for(i=0,_max_i=ctrl.containers.length;_max_i>i;i++)c=ctrl.containers[i],sz=inPixels(c.sizePixels,c.sizePercents),minSize=inPixels(c.minSizePixels,c.minSizePercents),maxSize=inPixels(c.maxSizePixels,c.maxSizePercents),void 0===sz?autoContainers++:autoSize-=sz,c.size=sz;var fix=1;0>autoSize&&(fix=availableSize/(availableSize-autoSize),autoSize=0);var autoSize1=Math.floor(autoSize/autoContainers),currentOffset=0,collapseAddon=0;for(i=0;_max_i>i;i++){if(c=ctrl.containers[i],void 0===c.size?c.size=autoSize1:c.size*=fix,c.collapsed)if(c.collapseToBegin)collapseAddon+=c.size,c.offset=currentOffset,c.size=0;else{for(var prev=ctrl.containers[i-1];;){if(s=ctrl.splitbars[prev.index],s.offset+=c.size,!prev.collapsed){prev.size+=c.size;break}prev.offset+=c.size,prev=ctrl.containers[prev.index-1]}c.offset=currentOffset+=c.size,c.size=0,collapseAddon=0}else c.offset=currentOffset,c.size+=collapseAddon,currentOffset+=c.size,collapseAddon=0;s=ctrl.splitbars[i],void 0!==s&&(s.offset=currentOffset,currentOffset+=s.size)}}function processMouseMove(){if(void 0===ctrl.movingSplitbar)return animationFrameRequested=void 0,void 0;var percents,dividerSize=parseInt(opts.dividerSize),elementSize=$element[0].getBoundingClientRect()[ctrl.sizeProperties.sizeProperty],availableSize=elementSize-dividerSize*ctrl.splitbars.length,index=ctrl.movingSplitbar.index,moveDeltaPercents=100*moveDelta/availableSize,c=ctrl.containers[index],next=ctrl.containers[index+1],maxSize=100*(c.size+next.size)/availableSize;void 0!==c.sizePixels?(percents=100*(c.sizePixels+moveDelta)/availableSize,c.sizePixels=void 0):percents=void 0===c.sizePercents?100*(c.size+moveDelta)/availableSize:c.sizePercents+moveDeltaPercents,percents=Math.max(0,Math.min(percents,maxSize)),c.sizePercents=percents,c=next,void 0!==c.sizePixels?(percents=100*(c.sizePixels-moveDelta)/availableSize,c.sizePixels=void 0):percents=void 0===c.sizePercents?100*(c.size-moveDelta)/availableSize:c.sizePercents-moveDeltaPercents,percents=Math.max(0,Math.min(percents,maxSize)),c.sizePercents=percents,calculateLayout(),$scope.$digest(),animationFrameRequested=null}var animationFrameRequested,moveDelta,ctrl=this,opts=angular.extend({},$scope.$eval($attrs.uiLayout),$scope.$eval($attrs.options));return opts.flow="column"===opts.flow?opts.flow:"row",opts.dividerSize=parseInt(opts.dividerSize)||10,ctrl.opts=opts,ctrl.containers=[],ctrl.splitbars=[],ctrl.movingSplitbar=null,ctrl.bounds=$element[0].getBoundingClientRect(),ctrl.isUsingColumnFlow="column"===opts.flow,ctrl.sizeProperties=ctrl.isUsingColumnFlow?{sizeProperty:"width",offsetSize:"offsetWidth",offsetPos:"left",flowProperty:"left",oppositeFlowProperty:"right",mouseProperty:"clientX",flowPropertyPosition:"x"}:{sizeProperty:"height",offsetSize:"offsetHeight",offsetPos:"top",flowProperty:"top",oppositeFlowProperty:"bottom",mouseProperty:"clientY",flowPropertyPosition:"y"},$element.addClass("stretch").addClass("ui-layout-"+opts.flow),ctrl.addContainer=function(container){container.index=ctrl.containers.length,ctrl.containers.push(container)},ctrl.addSplitbar=function(splitbar){splitbar.index=ctrl.splitbars.length,ctrl.splitbars.push(splitbar)},ctrl.initialSetup=function(){var i,_max_i;for(i=0,_max_i=ctrl.containers.length-1;_max_i>i;i++){var e=angular.element('<div ui-splitbar><a><span class="glyphicon"></span></a><a><span class="glyphicon"></span></a></div>');ctrl.containers[i].element.after(e),$compile(e)($scope)}_loadLayout()},ctrl.destroy=function(){_storeLayout()},ctrl.mouseDownHandler=function(splitbar){var prev=ctrl.containers[splitbar.index],next=ctrl.containers[splitbar.index+1];return prev.collapsed||next.collapsed?!1:(ctrl.movingSplitbar=splitbar,!0)},ctrl.mouseUpHandler=function(event){return void 0!==ctrl.movingSplitbar&&(ctrl.movingSplitbar=void 0),event},ctrl.mouseMoveHandler=function(mouseEvent){var mousePos=mouseEvent[ctrl.sizeProperties.mouseProperty]||mouseEvent.originalEvent&&mouseEvent.originalEvent[ctrl.sizeProperties.mouseProperty]||(mouseEvent.targetTouches?mouseEvent.targetTouches[0][ctrl.sizeProperties.mouseProperty]:0);moveDelta=mousePos-ctrl.movingSplitbar.offset,animationFrameRequested&&window.cancelAnimationFrame(animationFrameRequested),animationFrameRequested=window.requestAnimationFrame(processMouseMove)},ctrl.update=function(){calculateLayout()},ctrl.toggleBefore=function(splitbar){var index=splitbar.index,c=ctrl.containers[index];return c.collapsed=!c.collapsed,c.collapseToBegin=c.collapsed?!0:void 0,$scope.$evalAsync(function(){ctrl.update()}),c.collapsed},ctrl.toggleAfter=function(splitbar){var index=splitbar.index+1,c=ctrl.containers[index];return c.collapsed=!c.collapsed,c.collapseToBegin=c.collapsed?!1:void 0,$scope.$evalAsync(function(){ctrl.update()}),c.collapsed},ctrl.getPreviousContainer=function(currentSplitbar){return ctrl.containers[currentSplitbar.index]},ctrl.getNextContainer=function(currentSplitbar){return ctrl.containers[currentSplitbar.index+1]},ctrl}]).directive("uiLayout",["$window",function($window){return{restrict:"AE",controller:"uiLayoutCtrl",link:function(scope,element,attrs,ctrl){function onResize(){scope.$apply(function(){ctrl.update()})}ctrl.initialSetup(),scope.$watch(function(){return element[0][ctrl.sizeProperties.offsetSize]},function(){ctrl.update()}),angular.element($window).bind("resize",onResize),scope.$on("$destroy",function(){angular.element($window).unbind("resize",onResize),ctrl.destroy()})}}}]).directive("uiSplitbar",["$document","LayoutContainer",function($document,LayoutContainer){return{restrict:"EAC",require:"^uiLayout",scope:{},link:function(scope,element,attrs,ctrl){element.hasClass("stretch")||element.addClass("stretch"),element.hasClass("ui-splitbar")||element.addClass("ui-splitbar"),scope.splitbar=new LayoutContainer.Splitbar(element),ctrl.addSplitbar(scope.splitbar);var backButton=angular.element(element.children()[0]),forwardButton=angular.element(element.children()[1]);angular.element(backButton.children()[0]).addClass(ctrl.isUsingColumnFlow?"glyphicon-chevron-left":"glyphicon-chevron-up"),angular.element(forwardButton.children()[0]).addClass(ctrl.isUsingColumnFlow?"glyphicon-chevron-right":"glyphicon-chevron-down");var prevContainer=ctrl.getPreviousContainer(scope.splitbar),nextContainer=ctrl.getNextContainer(scope.splitbar);scope.$watchGroup([function(){return prevContainer.collapsed},function(){return nextContainer.collapsed}],function(){backButton.css("display",prevContainer.collapsed?"none":"inline"),forwardButton.css("display",nextContainer.collapsed?"none":"inline")}),backButton.on("click",function(){nextContainer.collapsed&&!nextContainer.collapseToBegin?ctrl.toggleAfter(scope.splitbar):ctrl.toggleBefore(scope.splitbar),scope.$parent.$digest()}),forwardButton.on("click",function(){prevContainer.collapsed&&prevContainer.collapseToBegin?ctrl.toggleBefore(scope.splitbar):ctrl.toggleAfter(scope.splitbar),scope.$parent.$digest()});var mouseMove=function(event){scope.$apply(function(){ctrl.mouseMoveHandler(event)})};element.on("mousedown touchstart",function(e){return e.target&&e.target!==element[0]?void 0:(event.preventDefault(),event.stopPropagation(),scope.$apply(function(){ctrl.mouseDownHandler(scope.splitbar)&&$document.on("mousemove touchmove",mouseMove)}),!1)}),$document.on("mouseup touchend",function(event){scope.$apply(function(){ctrl.mouseUpHandler(event)}),$document.off("mousemove touchmove",mouseMove)}),scope.$watch("splitbar.size",function(newValue){element.css(ctrl.sizeProperties.sizeProperty,newValue+"px")}),scope.$watch("splitbar.offset",function(newValue){element.css(ctrl.sizeProperties.flowProperty,newValue+"px")})}}}]).directive("uiLayoutContainer",["LayoutContainer",function(LayoutContainer){return{restrict:"EAC",require:"^uiLayout",scope:{},compile:function(){return{pre:function(scope,element,attrs,ctrl){scope.container=new LayoutContainer.Container(element,attrs,scope.$parent),ctrl.addContainer(scope.container)},post:function(scope,element,attrs,ctrl){element.hasClass("ui-layout-container")||element.addClass("ui-layout-container"),element.hasClass("stretch")||element.addClass("stretch"),scope.$watch("container.size",function(newValue){element.css(ctrl.sizeProperties.sizeProperty,newValue+"px")}),scope.$watch("container.offset",function(newValue){element.css(ctrl.sizeProperties.flowProperty,newValue+"px")})}}}}}]).factory("LayoutContainer",["$parse",function(){function Container(element,attrs,evaluationScope){this.index=-1,this.element=element,this.resizable=!0,this.collapsed=evaluationScope.$eval(attrs.collapsed)||!1,this.collapseToBegin=this.collapsed?!0:void 0,this.offset=void 0,this.size=void 0,this.sizePixels=void 0,this.sizePercents=void 0,this.maxSizePixels=void 0,this.maxSizePercents=void 0,this.minSizePixels=void 0,this.minSizePercents=void 0,parseFieldValue(this,"size",attrs.size),void 0!==attrs.minSize&&console.error("ui-layout: min-size is not supported"),void 0!==attrs.maxSize&&console.error("ui-layout: max-size is not supported")}function Splitbar(element){this.index=-1,this.element=element,this.size=10,this.offset=0}var containerStateEntries="collapsed collapseToBegin sizePixels sizePercents".split(" ");return angular.extend(Container.prototype,{getState:function(){var self=this,res={};return angular.forEach(containerStateEntries,function(k){res[k]=self[k]}),res},setState:function(state){var self=this;angular.forEach(containerStateEntries,function(k){self[k]=state[k]})}}),{Container:Container,Splitbar:Splitbar}}])}();